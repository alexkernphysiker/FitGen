cmake_minimum_required(VERSION 2.6)
project(FitGen)
option(tests "Build all tests.")
option(threads "Use multithreading")
if(DEFINED MATH_H_INC)
    if(threads)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -pthread")
	add_definitions(-Dusing_multithread)
    endif()
    add_definitions(-std=c++1z)
	get_directory_property(has_parent PARENT_DIRECTORY)
	if(has_parent)
		set(FITGEN_INC 
			${CMAKE_CURRENT_SOURCE_DIR}/include
			${MATH_H_INC}
		PARENT_SCOPE)
	endif()

	include_directories(${MATH_H_INC})
	include_directories(include)
	file(GLOB SOURCES src/*.cpp)
	file(GLOB TESTS tests/*.cpp)
	file(GLOB EXAMPLES Example/*.cpp)
	add_library(FitGen SHARED ${SOURCES})

	foreach(example ${EXAMPLES})
		get_filename_component(ex_app ${example} NAME_WE)
		add_executable(${ex_app} ${example})
		target_link_libraries(${ex_app} FitGen)
	endforeach()

	if(tests)
		find_package(GTest REQUIRED)
		set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -pthread")
		include_directories(${GTEST_INCLUDE_DIRS})
		add_executable(fitgen_test.exe ${TESTS})
		target_link_libraries(fitgen_test.exe FitGen ${GTEST_BOTH_LIBRARIES})
	endif()
else()
	message(FATAL_ERROR "FitGen subproject requires math_h subproject to add")
endif()
